// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _AFAProcessFunction_HH_
#define _AFAProcessFunction_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AFAProcessFunction_AFAProcessFunctionParamBlock.h"
#include "AFAProcessFunction_p_m_axi.h"
#include "AFAProcessFunction_srcNet_m_axi.h"
#include "AFAProcessFunction_dstNet_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_P_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_P_ID_WIDTH = 1,
         unsigned int C_M_AXI_P_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_P_DATA_WIDTH = 32,
         unsigned int C_M_AXI_P_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_P_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_P_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_P_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_SRCNET_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_SRCNET_ID_WIDTH = 1,
         unsigned int C_M_AXI_SRCNET_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_SRCNET_DATA_WIDTH = 32,
         unsigned int C_M_AXI_SRCNET_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_SRCNET_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_SRCNET_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_SRCNET_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_DSTNET_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DSTNET_ID_WIDTH = 1,
         unsigned int C_M_AXI_DSTNET_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DSTNET_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DSTNET_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DSTNET_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DSTNET_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DSTNET_BUSER_WIDTH = 1>
struct AFAProcessFunction : public sc_module {
    // Port declarations 141
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_p_AWVALID;
    sc_in< sc_logic > m_axi_p_AWREADY;
    sc_out< sc_uint<C_M_AXI_P_ADDR_WIDTH> > m_axi_p_AWADDR;
    sc_out< sc_uint<C_M_AXI_P_ID_WIDTH> > m_axi_p_AWID;
    sc_out< sc_lv<8> > m_axi_p_AWLEN;
    sc_out< sc_lv<3> > m_axi_p_AWSIZE;
    sc_out< sc_lv<2> > m_axi_p_AWBURST;
    sc_out< sc_lv<2> > m_axi_p_AWLOCK;
    sc_out< sc_lv<4> > m_axi_p_AWCACHE;
    sc_out< sc_lv<3> > m_axi_p_AWPROT;
    sc_out< sc_lv<4> > m_axi_p_AWQOS;
    sc_out< sc_lv<4> > m_axi_p_AWREGION;
    sc_out< sc_uint<C_M_AXI_P_AWUSER_WIDTH> > m_axi_p_AWUSER;
    sc_out< sc_logic > m_axi_p_WVALID;
    sc_in< sc_logic > m_axi_p_WREADY;
    sc_out< sc_uint<C_M_AXI_P_DATA_WIDTH> > m_axi_p_WDATA;
    sc_out< sc_uint<C_M_AXI_P_DATA_WIDTH/8> > m_axi_p_WSTRB;
    sc_out< sc_logic > m_axi_p_WLAST;
    sc_out< sc_uint<C_M_AXI_P_ID_WIDTH> > m_axi_p_WID;
    sc_out< sc_uint<C_M_AXI_P_WUSER_WIDTH> > m_axi_p_WUSER;
    sc_out< sc_logic > m_axi_p_ARVALID;
    sc_in< sc_logic > m_axi_p_ARREADY;
    sc_out< sc_uint<C_M_AXI_P_ADDR_WIDTH> > m_axi_p_ARADDR;
    sc_out< sc_uint<C_M_AXI_P_ID_WIDTH> > m_axi_p_ARID;
    sc_out< sc_lv<8> > m_axi_p_ARLEN;
    sc_out< sc_lv<3> > m_axi_p_ARSIZE;
    sc_out< sc_lv<2> > m_axi_p_ARBURST;
    sc_out< sc_lv<2> > m_axi_p_ARLOCK;
    sc_out< sc_lv<4> > m_axi_p_ARCACHE;
    sc_out< sc_lv<3> > m_axi_p_ARPROT;
    sc_out< sc_lv<4> > m_axi_p_ARQOS;
    sc_out< sc_lv<4> > m_axi_p_ARREGION;
    sc_out< sc_uint<C_M_AXI_P_ARUSER_WIDTH> > m_axi_p_ARUSER;
    sc_in< sc_logic > m_axi_p_RVALID;
    sc_out< sc_logic > m_axi_p_RREADY;
    sc_in< sc_uint<C_M_AXI_P_DATA_WIDTH> > m_axi_p_RDATA;
    sc_in< sc_logic > m_axi_p_RLAST;
    sc_in< sc_uint<C_M_AXI_P_ID_WIDTH> > m_axi_p_RID;
    sc_in< sc_uint<C_M_AXI_P_RUSER_WIDTH> > m_axi_p_RUSER;
    sc_in< sc_lv<2> > m_axi_p_RRESP;
    sc_in< sc_logic > m_axi_p_BVALID;
    sc_out< sc_logic > m_axi_p_BREADY;
    sc_in< sc_lv<2> > m_axi_p_BRESP;
    sc_in< sc_uint<C_M_AXI_P_ID_WIDTH> > m_axi_p_BID;
    sc_in< sc_uint<C_M_AXI_P_BUSER_WIDTH> > m_axi_p_BUSER;
    sc_out< sc_logic > m_axi_srcNet_AWVALID;
    sc_in< sc_logic > m_axi_srcNet_AWREADY;
    sc_out< sc_uint<C_M_AXI_SRCNET_ADDR_WIDTH> > m_axi_srcNet_AWADDR;
    sc_out< sc_uint<C_M_AXI_SRCNET_ID_WIDTH> > m_axi_srcNet_AWID;
    sc_out< sc_lv<8> > m_axi_srcNet_AWLEN;
    sc_out< sc_lv<3> > m_axi_srcNet_AWSIZE;
    sc_out< sc_lv<2> > m_axi_srcNet_AWBURST;
    sc_out< sc_lv<2> > m_axi_srcNet_AWLOCK;
    sc_out< sc_lv<4> > m_axi_srcNet_AWCACHE;
    sc_out< sc_lv<3> > m_axi_srcNet_AWPROT;
    sc_out< sc_lv<4> > m_axi_srcNet_AWQOS;
    sc_out< sc_lv<4> > m_axi_srcNet_AWREGION;
    sc_out< sc_uint<C_M_AXI_SRCNET_AWUSER_WIDTH> > m_axi_srcNet_AWUSER;
    sc_out< sc_logic > m_axi_srcNet_WVALID;
    sc_in< sc_logic > m_axi_srcNet_WREADY;
    sc_out< sc_uint<C_M_AXI_SRCNET_DATA_WIDTH> > m_axi_srcNet_WDATA;
    sc_out< sc_uint<C_M_AXI_SRCNET_DATA_WIDTH/8> > m_axi_srcNet_WSTRB;
    sc_out< sc_logic > m_axi_srcNet_WLAST;
    sc_out< sc_uint<C_M_AXI_SRCNET_ID_WIDTH> > m_axi_srcNet_WID;
    sc_out< sc_uint<C_M_AXI_SRCNET_WUSER_WIDTH> > m_axi_srcNet_WUSER;
    sc_out< sc_logic > m_axi_srcNet_ARVALID;
    sc_in< sc_logic > m_axi_srcNet_ARREADY;
    sc_out< sc_uint<C_M_AXI_SRCNET_ADDR_WIDTH> > m_axi_srcNet_ARADDR;
    sc_out< sc_uint<C_M_AXI_SRCNET_ID_WIDTH> > m_axi_srcNet_ARID;
    sc_out< sc_lv<8> > m_axi_srcNet_ARLEN;
    sc_out< sc_lv<3> > m_axi_srcNet_ARSIZE;
    sc_out< sc_lv<2> > m_axi_srcNet_ARBURST;
    sc_out< sc_lv<2> > m_axi_srcNet_ARLOCK;
    sc_out< sc_lv<4> > m_axi_srcNet_ARCACHE;
    sc_out< sc_lv<3> > m_axi_srcNet_ARPROT;
    sc_out< sc_lv<4> > m_axi_srcNet_ARQOS;
    sc_out< sc_lv<4> > m_axi_srcNet_ARREGION;
    sc_out< sc_uint<C_M_AXI_SRCNET_ARUSER_WIDTH> > m_axi_srcNet_ARUSER;
    sc_in< sc_logic > m_axi_srcNet_RVALID;
    sc_out< sc_logic > m_axi_srcNet_RREADY;
    sc_in< sc_uint<C_M_AXI_SRCNET_DATA_WIDTH> > m_axi_srcNet_RDATA;
    sc_in< sc_logic > m_axi_srcNet_RLAST;
    sc_in< sc_uint<C_M_AXI_SRCNET_ID_WIDTH> > m_axi_srcNet_RID;
    sc_in< sc_uint<C_M_AXI_SRCNET_RUSER_WIDTH> > m_axi_srcNet_RUSER;
    sc_in< sc_lv<2> > m_axi_srcNet_RRESP;
    sc_in< sc_logic > m_axi_srcNet_BVALID;
    sc_out< sc_logic > m_axi_srcNet_BREADY;
    sc_in< sc_lv<2> > m_axi_srcNet_BRESP;
    sc_in< sc_uint<C_M_AXI_SRCNET_ID_WIDTH> > m_axi_srcNet_BID;
    sc_in< sc_uint<C_M_AXI_SRCNET_BUSER_WIDTH> > m_axi_srcNet_BUSER;
    sc_out< sc_logic > m_axi_dstNet_AWVALID;
    sc_in< sc_logic > m_axi_dstNet_AWREADY;
    sc_out< sc_uint<C_M_AXI_DSTNET_ADDR_WIDTH> > m_axi_dstNet_AWADDR;
    sc_out< sc_uint<C_M_AXI_DSTNET_ID_WIDTH> > m_axi_dstNet_AWID;
    sc_out< sc_lv<8> > m_axi_dstNet_AWLEN;
    sc_out< sc_lv<3> > m_axi_dstNet_AWSIZE;
    sc_out< sc_lv<2> > m_axi_dstNet_AWBURST;
    sc_out< sc_lv<2> > m_axi_dstNet_AWLOCK;
    sc_out< sc_lv<4> > m_axi_dstNet_AWCACHE;
    sc_out< sc_lv<3> > m_axi_dstNet_AWPROT;
    sc_out< sc_lv<4> > m_axi_dstNet_AWQOS;
    sc_out< sc_lv<4> > m_axi_dstNet_AWREGION;
    sc_out< sc_uint<C_M_AXI_DSTNET_AWUSER_WIDTH> > m_axi_dstNet_AWUSER;
    sc_out< sc_logic > m_axi_dstNet_WVALID;
    sc_in< sc_logic > m_axi_dstNet_WREADY;
    sc_out< sc_uint<C_M_AXI_DSTNET_DATA_WIDTH> > m_axi_dstNet_WDATA;
    sc_out< sc_uint<C_M_AXI_DSTNET_DATA_WIDTH/8> > m_axi_dstNet_WSTRB;
    sc_out< sc_logic > m_axi_dstNet_WLAST;
    sc_out< sc_uint<C_M_AXI_DSTNET_ID_WIDTH> > m_axi_dstNet_WID;
    sc_out< sc_uint<C_M_AXI_DSTNET_WUSER_WIDTH> > m_axi_dstNet_WUSER;
    sc_out< sc_logic > m_axi_dstNet_ARVALID;
    sc_in< sc_logic > m_axi_dstNet_ARREADY;
    sc_out< sc_uint<C_M_AXI_DSTNET_ADDR_WIDTH> > m_axi_dstNet_ARADDR;
    sc_out< sc_uint<C_M_AXI_DSTNET_ID_WIDTH> > m_axi_dstNet_ARID;
    sc_out< sc_lv<8> > m_axi_dstNet_ARLEN;
    sc_out< sc_lv<3> > m_axi_dstNet_ARSIZE;
    sc_out< sc_lv<2> > m_axi_dstNet_ARBURST;
    sc_out< sc_lv<2> > m_axi_dstNet_ARLOCK;
    sc_out< sc_lv<4> > m_axi_dstNet_ARCACHE;
    sc_out< sc_lv<3> > m_axi_dstNet_ARPROT;
    sc_out< sc_lv<4> > m_axi_dstNet_ARQOS;
    sc_out< sc_lv<4> > m_axi_dstNet_ARREGION;
    sc_out< sc_uint<C_M_AXI_DSTNET_ARUSER_WIDTH> > m_axi_dstNet_ARUSER;
    sc_in< sc_logic > m_axi_dstNet_RVALID;
    sc_out< sc_logic > m_axi_dstNet_RREADY;
    sc_in< sc_uint<C_M_AXI_DSTNET_DATA_WIDTH> > m_axi_dstNet_RDATA;
    sc_in< sc_logic > m_axi_dstNet_RLAST;
    sc_in< sc_uint<C_M_AXI_DSTNET_ID_WIDTH> > m_axi_dstNet_RID;
    sc_in< sc_uint<C_M_AXI_DSTNET_RUSER_WIDTH> > m_axi_dstNet_RUSER;
    sc_in< sc_lv<2> > m_axi_dstNet_RRESP;
    sc_in< sc_logic > m_axi_dstNet_BVALID;
    sc_out< sc_logic > m_axi_dstNet_BREADY;
    sc_in< sc_lv<2> > m_axi_dstNet_BRESP;
    sc_in< sc_uint<C_M_AXI_DSTNET_ID_WIDTH> > m_axi_dstNet_BID;
    sc_in< sc_uint<C_M_AXI_DSTNET_BUSER_WIDTH> > m_axi_dstNet_BUSER;


    // Module declarations
    AFAProcessFunction(sc_module_name name);
    SC_HAS_PROCESS(AFAProcessFunction);

    ~AFAProcessFunction();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    AFAProcessFunction_p_m_axi<32,32,5,C_M_AXI_P_ID_WIDTH,C_M_AXI_P_ADDR_WIDTH,C_M_AXI_P_DATA_WIDTH,C_M_AXI_P_AWUSER_WIDTH,C_M_AXI_P_ARUSER_WIDTH,C_M_AXI_P_WUSER_WIDTH,C_M_AXI_P_RUSER_WIDTH,C_M_AXI_P_BUSER_WIDTH,C_M_AXI_P_TARGET_ADDR,C_M_AXI_P_USER_VALUE,C_M_AXI_P_PROT_VALUE,C_M_AXI_P_CACHE_VALUE>* AFAProcessFunction_p_m_axi_U;
    AFAProcessFunction_srcNet_m_axi<8,32,5,C_M_AXI_SRCNET_ID_WIDTH,C_M_AXI_SRCNET_ADDR_WIDTH,C_M_AXI_SRCNET_DATA_WIDTH,C_M_AXI_SRCNET_AWUSER_WIDTH,C_M_AXI_SRCNET_ARUSER_WIDTH,C_M_AXI_SRCNET_WUSER_WIDTH,C_M_AXI_SRCNET_RUSER_WIDTH,C_M_AXI_SRCNET_BUSER_WIDTH,C_M_AXI_SRCNET_TARGET_ADDR,C_M_AXI_SRCNET_USER_VALUE,C_M_AXI_SRCNET_PROT_VALUE,C_M_AXI_SRCNET_CACHE_VALUE>* AFAProcessFunction_srcNet_m_axi_U;
    AFAProcessFunction_dstNet_m_axi<8,32,5,C_M_AXI_DSTNET_ID_WIDTH,C_M_AXI_DSTNET_ADDR_WIDTH,C_M_AXI_DSTNET_DATA_WIDTH,C_M_AXI_DSTNET_AWUSER_WIDTH,C_M_AXI_DSTNET_ARUSER_WIDTH,C_M_AXI_DSTNET_WUSER_WIDTH,C_M_AXI_DSTNET_RUSER_WIDTH,C_M_AXI_DSTNET_BUSER_WIDTH,C_M_AXI_DSTNET_TARGET_ADDR,C_M_AXI_DSTNET_USER_VALUE,C_M_AXI_DSTNET_PROT_VALUE,C_M_AXI_DSTNET_CACHE_VALUE>* AFAProcessFunction_dstNet_m_axi_U;
    AFAProcessFunction_AFAProcessFunctionParamBlock* AFAProcessFunctionParamBlock_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_31;
    sc_signal< sc_logic > p_AWVALID;
    sc_signal< sc_logic > p_AWREADY;
    sc_signal< sc_lv<32> > p_AWADDR;
    sc_signal< sc_lv<1> > p_AWID;
    sc_signal< sc_lv<32> > p_AWLEN;
    sc_signal< sc_lv<3> > p_AWSIZE;
    sc_signal< sc_lv<2> > p_AWBURST;
    sc_signal< sc_lv<2> > p_AWLOCK;
    sc_signal< sc_lv<4> > p_AWCACHE;
    sc_signal< sc_lv<3> > p_AWPROT;
    sc_signal< sc_lv<4> > p_AWQOS;
    sc_signal< sc_lv<4> > p_AWREGION;
    sc_signal< sc_lv<1> > p_AWUSER;
    sc_signal< sc_logic > p_WVALID;
    sc_signal< sc_logic > p_WREADY;
    sc_signal< sc_lv<32> > p_WDATA;
    sc_signal< sc_lv<4> > p_WSTRB;
    sc_signal< sc_logic > p_WLAST;
    sc_signal< sc_lv<1> > p_WID;
    sc_signal< sc_lv<1> > p_WUSER;
    sc_signal< sc_logic > p_ARVALID;
    sc_signal< sc_logic > p_ARREADY;
    sc_signal< sc_lv<32> > p_ARADDR;
    sc_signal< sc_lv<1> > p_ARID;
    sc_signal< sc_lv<32> > p_ARLEN;
    sc_signal< sc_lv<3> > p_ARSIZE;
    sc_signal< sc_lv<2> > p_ARBURST;
    sc_signal< sc_lv<2> > p_ARLOCK;
    sc_signal< sc_lv<4> > p_ARCACHE;
    sc_signal< sc_lv<3> > p_ARPROT;
    sc_signal< sc_lv<4> > p_ARQOS;
    sc_signal< sc_lv<4> > p_ARREGION;
    sc_signal< sc_lv<1> > p_ARUSER;
    sc_signal< sc_logic > p_RVALID;
    sc_signal< sc_logic > p_RREADY;
    sc_signal< sc_lv<32> > p_RDATA;
    sc_signal< sc_logic > p_RLAST;
    sc_signal< sc_lv<1> > p_RID;
    sc_signal< sc_lv<1> > p_RUSER;
    sc_signal< sc_lv<2> > p_RRESP;
    sc_signal< sc_logic > p_BVALID;
    sc_signal< sc_logic > p_BREADY;
    sc_signal< sc_lv<2> > p_BRESP;
    sc_signal< sc_lv<1> > p_BID;
    sc_signal< sc_lv<1> > p_BUSER;
    sc_signal< sc_logic > AFAProcessFunction_p_m_axi_U_ap_dummy_ce;
    sc_signal< sc_logic > srcNet_AWVALID;
    sc_signal< sc_logic > srcNet_AWREADY;
    sc_signal< sc_lv<32> > srcNet_AWADDR;
    sc_signal< sc_lv<1> > srcNet_AWID;
    sc_signal< sc_lv<32> > srcNet_AWLEN;
    sc_signal< sc_lv<3> > srcNet_AWSIZE;
    sc_signal< sc_lv<2> > srcNet_AWBURST;
    sc_signal< sc_lv<2> > srcNet_AWLOCK;
    sc_signal< sc_lv<4> > srcNet_AWCACHE;
    sc_signal< sc_lv<3> > srcNet_AWPROT;
    sc_signal< sc_lv<4> > srcNet_AWQOS;
    sc_signal< sc_lv<4> > srcNet_AWREGION;
    sc_signal< sc_lv<1> > srcNet_AWUSER;
    sc_signal< sc_logic > srcNet_WVALID;
    sc_signal< sc_logic > srcNet_WREADY;
    sc_signal< sc_lv<8> > srcNet_WDATA;
    sc_signal< sc_lv<1> > srcNet_WSTRB;
    sc_signal< sc_logic > srcNet_WLAST;
    sc_signal< sc_lv<1> > srcNet_WID;
    sc_signal< sc_lv<1> > srcNet_WUSER;
    sc_signal< sc_logic > srcNet_ARVALID;
    sc_signal< sc_logic > srcNet_ARREADY;
    sc_signal< sc_lv<32> > srcNet_ARADDR;
    sc_signal< sc_lv<1> > srcNet_ARID;
    sc_signal< sc_lv<32> > srcNet_ARLEN;
    sc_signal< sc_lv<3> > srcNet_ARSIZE;
    sc_signal< sc_lv<2> > srcNet_ARBURST;
    sc_signal< sc_lv<2> > srcNet_ARLOCK;
    sc_signal< sc_lv<4> > srcNet_ARCACHE;
    sc_signal< sc_lv<3> > srcNet_ARPROT;
    sc_signal< sc_lv<4> > srcNet_ARQOS;
    sc_signal< sc_lv<4> > srcNet_ARREGION;
    sc_signal< sc_lv<1> > srcNet_ARUSER;
    sc_signal< sc_logic > srcNet_RVALID;
    sc_signal< sc_logic > srcNet_RREADY;
    sc_signal< sc_lv<8> > srcNet_RDATA;
    sc_signal< sc_logic > srcNet_RLAST;
    sc_signal< sc_lv<1> > srcNet_RID;
    sc_signal< sc_lv<1> > srcNet_RUSER;
    sc_signal< sc_lv<2> > srcNet_RRESP;
    sc_signal< sc_logic > srcNet_BVALID;
    sc_signal< sc_logic > srcNet_BREADY;
    sc_signal< sc_lv<2> > srcNet_BRESP;
    sc_signal< sc_lv<1> > srcNet_BID;
    sc_signal< sc_lv<1> > srcNet_BUSER;
    sc_signal< sc_logic > AFAProcessFunction_srcNet_m_axi_U_ap_dummy_ce;
    sc_signal< sc_logic > dstNet_AWVALID;
    sc_signal< sc_logic > dstNet_AWREADY;
    sc_signal< sc_lv<32> > dstNet_AWADDR;
    sc_signal< sc_lv<1> > dstNet_AWID;
    sc_signal< sc_lv<32> > dstNet_AWLEN;
    sc_signal< sc_lv<3> > dstNet_AWSIZE;
    sc_signal< sc_lv<2> > dstNet_AWBURST;
    sc_signal< sc_lv<2> > dstNet_AWLOCK;
    sc_signal< sc_lv<4> > dstNet_AWCACHE;
    sc_signal< sc_lv<3> > dstNet_AWPROT;
    sc_signal< sc_lv<4> > dstNet_AWQOS;
    sc_signal< sc_lv<4> > dstNet_AWREGION;
    sc_signal< sc_lv<1> > dstNet_AWUSER;
    sc_signal< sc_logic > dstNet_WVALID;
    sc_signal< sc_logic > dstNet_WREADY;
    sc_signal< sc_lv<8> > dstNet_WDATA;
    sc_signal< sc_lv<1> > dstNet_WSTRB;
    sc_signal< sc_logic > dstNet_WLAST;
    sc_signal< sc_lv<1> > dstNet_WID;
    sc_signal< sc_lv<1> > dstNet_WUSER;
    sc_signal< sc_logic > dstNet_ARVALID;
    sc_signal< sc_logic > dstNet_ARREADY;
    sc_signal< sc_lv<32> > dstNet_ARADDR;
    sc_signal< sc_lv<1> > dstNet_ARID;
    sc_signal< sc_lv<32> > dstNet_ARLEN;
    sc_signal< sc_lv<3> > dstNet_ARSIZE;
    sc_signal< sc_lv<2> > dstNet_ARBURST;
    sc_signal< sc_lv<2> > dstNet_ARLOCK;
    sc_signal< sc_lv<4> > dstNet_ARCACHE;
    sc_signal< sc_lv<3> > dstNet_ARPROT;
    sc_signal< sc_lv<4> > dstNet_ARQOS;
    sc_signal< sc_lv<4> > dstNet_ARREGION;
    sc_signal< sc_lv<1> > dstNet_ARUSER;
    sc_signal< sc_logic > dstNet_RVALID;
    sc_signal< sc_logic > dstNet_RREADY;
    sc_signal< sc_lv<8> > dstNet_RDATA;
    sc_signal< sc_logic > dstNet_RLAST;
    sc_signal< sc_lv<1> > dstNet_RID;
    sc_signal< sc_lv<1> > dstNet_RUSER;
    sc_signal< sc_lv<2> > dstNet_RRESP;
    sc_signal< sc_logic > dstNet_BVALID;
    sc_signal< sc_logic > dstNet_BREADY;
    sc_signal< sc_lv<2> > dstNet_BRESP;
    sc_signal< sc_lv<1> > dstNet_BID;
    sc_signal< sc_lv<1> > dstNet_BUSER;
    sc_signal< sc_logic > AFAProcessFunction_dstNet_m_axi_U_ap_dummy_ce;
    sc_signal< sc_lv<7> > indvar_reg_113;
    sc_signal< sc_lv<7> > ap_reg_ppstg_indvar_reg_113_pp0_it1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_6;
    sc_signal< bool > ap_sig_bdd_414;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > exitcond_reg_171;
    sc_signal< bool > ap_sig_bdd_423;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<7> > indvar4_reg_125;
    sc_signal< sc_lv<1> > exitcond_fu_137_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_171_pp0_it1;
    sc_signal< sc_lv<7> > indvar_next_fu_143_p2;
    sc_signal< sc_lv<7> > indvar_next_reg_175;
    sc_signal< sc_lv<32> > p_read_reg_180;
    sc_signal< sc_lv<1> > exitcond6_fu_154_p2;
    sc_signal< sc_lv<1> > exitcond6_reg_185;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_8;
    sc_signal< bool > ap_sig_bdd_450;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond6_reg_185_pp1_it1;
    sc_signal< sc_logic > ap_sig_ioackin_p_WREADY;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_lv<7> > indvar_next5_fu_160_p2;
    sc_signal< sc_lv<32> > AFAProcessFunctionParamBlock_q0;
    sc_signal< sc_lv<32> > AFAProcessFunctionParamBlock_l_reg_199;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_484;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_7;
    sc_signal< bool > ap_sig_bdd_496;
    sc_signal< sc_logic > ap_sig_ioackin_p_AWREADY;
    sc_signal< sc_lv<6> > AFAProcessFunctionParamBlock_address0;
    sc_signal< sc_logic > AFAProcessFunctionParamBlock_ce0;
    sc_signal< sc_logic > AFAProcessFunctionParamBlock_we0;
    sc_signal< sc_lv<32> > AFAProcessFunctionParamBlock_d0;
    sc_signal< sc_lv<7> > indvar_phi_fu_117_p4;
    sc_signal< sc_lv<64> > tmp_fu_149_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_166_p1;
    sc_signal< sc_logic > ap_reg_ioackin_p_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_p_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_p_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_p_WREADY;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_12;
    sc_signal< bool > ap_sig_bdd_567;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_655;
    sc_signal< bool > ap_sig_bdd_555;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_st1_fsm_0;
    static const sc_lv<13> ap_ST_st2_fsm_1;
    static const sc_lv<13> ap_ST_st3_fsm_2;
    static const sc_lv<13> ap_ST_st4_fsm_3;
    static const sc_lv<13> ap_ST_st5_fsm_4;
    static const sc_lv<13> ap_ST_st6_fsm_5;
    static const sc_lv<13> ap_ST_pp0_stg0_fsm_6;
    static const sc_lv<13> ap_ST_st10_fsm_7;
    static const sc_lv<13> ap_ST_pp1_stg0_fsm_8;
    static const sc_lv<13> ap_ST_st14_fsm_9;
    static const sc_lv<13> ap_ST_st15_fsm_10;
    static const sc_lv<13> ap_ST_st16_fsm_11;
    static const sc_lv<13> ap_ST_st17_fsm_12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_DATA_WIDTH;
    static const int C_M_AXI_P_TARGET_ADDR;
    static const int C_M_AXI_P_USER_VALUE;
    static const int C_M_AXI_P_PROT_VALUE;
    static const int C_M_AXI_P_CACHE_VALUE;
    static const int C_M_AXI_SRCNET_TARGET_ADDR;
    static const int C_M_AXI_SRCNET_USER_VALUE;
    static const int C_M_AXI_SRCNET_PROT_VALUE;
    static const int C_M_AXI_SRCNET_CACHE_VALUE;
    static const int C_M_AXI_DSTNET_TARGET_ADDR;
    static const int C_M_AXI_DSTNET_USER_VALUE;
    static const int C_M_AXI_DSTNET_PROT_VALUE;
    static const int C_M_AXI_DSTNET_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AFAProcessFunctionParamBlock_address0();
    void thread_AFAProcessFunctionParamBlock_ce0();
    void thread_AFAProcessFunctionParamBlock_d0();
    void thread_AFAProcessFunctionParamBlock_we0();
    void thread_AFAProcessFunction_dstNet_m_axi_U_ap_dummy_ce();
    void thread_AFAProcessFunction_p_m_axi_U_ap_dummy_ce();
    void thread_AFAProcessFunction_srcNet_m_axi_U_ap_dummy_ce();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_31();
    void thread_ap_sig_bdd_414();
    void thread_ap_sig_bdd_423();
    void thread_ap_sig_bdd_450();
    void thread_ap_sig_bdd_484();
    void thread_ap_sig_bdd_496();
    void thread_ap_sig_bdd_555();
    void thread_ap_sig_bdd_567();
    void thread_ap_sig_bdd_655();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_6();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_8();
    void thread_ap_sig_cseq_ST_st10_fsm_7();
    void thread_ap_sig_cseq_ST_st17_fsm_12();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_ioackin_p_ARREADY();
    void thread_ap_sig_ioackin_p_AWREADY();
    void thread_ap_sig_ioackin_p_WREADY();
    void thread_dstNet_ARADDR();
    void thread_dstNet_ARBURST();
    void thread_dstNet_ARCACHE();
    void thread_dstNet_ARID();
    void thread_dstNet_ARLEN();
    void thread_dstNet_ARLOCK();
    void thread_dstNet_ARPROT();
    void thread_dstNet_ARQOS();
    void thread_dstNet_ARREGION();
    void thread_dstNet_ARSIZE();
    void thread_dstNet_ARUSER();
    void thread_dstNet_ARVALID();
    void thread_dstNet_AWADDR();
    void thread_dstNet_AWBURST();
    void thread_dstNet_AWCACHE();
    void thread_dstNet_AWID();
    void thread_dstNet_AWLEN();
    void thread_dstNet_AWLOCK();
    void thread_dstNet_AWPROT();
    void thread_dstNet_AWQOS();
    void thread_dstNet_AWREGION();
    void thread_dstNet_AWSIZE();
    void thread_dstNet_AWUSER();
    void thread_dstNet_AWVALID();
    void thread_dstNet_BREADY();
    void thread_dstNet_RREADY();
    void thread_dstNet_WDATA();
    void thread_dstNet_WID();
    void thread_dstNet_WLAST();
    void thread_dstNet_WSTRB();
    void thread_dstNet_WUSER();
    void thread_dstNet_WVALID();
    void thread_exitcond6_fu_154_p2();
    void thread_exitcond_fu_137_p2();
    void thread_indvar_next5_fu_160_p2();
    void thread_indvar_next_fu_143_p2();
    void thread_indvar_phi_fu_117_p4();
    void thread_p_ARADDR();
    void thread_p_ARBURST();
    void thread_p_ARCACHE();
    void thread_p_ARID();
    void thread_p_ARLEN();
    void thread_p_ARLOCK();
    void thread_p_ARPROT();
    void thread_p_ARQOS();
    void thread_p_ARREGION();
    void thread_p_ARSIZE();
    void thread_p_ARUSER();
    void thread_p_ARVALID();
    void thread_p_AWADDR();
    void thread_p_AWBURST();
    void thread_p_AWCACHE();
    void thread_p_AWID();
    void thread_p_AWLEN();
    void thread_p_AWLOCK();
    void thread_p_AWPROT();
    void thread_p_AWQOS();
    void thread_p_AWREGION();
    void thread_p_AWSIZE();
    void thread_p_AWUSER();
    void thread_p_AWVALID();
    void thread_p_BREADY();
    void thread_p_RREADY();
    void thread_p_WDATA();
    void thread_p_WID();
    void thread_p_WLAST();
    void thread_p_WSTRB();
    void thread_p_WUSER();
    void thread_p_WVALID();
    void thread_srcNet_ARADDR();
    void thread_srcNet_ARBURST();
    void thread_srcNet_ARCACHE();
    void thread_srcNet_ARID();
    void thread_srcNet_ARLEN();
    void thread_srcNet_ARLOCK();
    void thread_srcNet_ARPROT();
    void thread_srcNet_ARQOS();
    void thread_srcNet_ARREGION();
    void thread_srcNet_ARSIZE();
    void thread_srcNet_ARUSER();
    void thread_srcNet_ARVALID();
    void thread_srcNet_AWADDR();
    void thread_srcNet_AWBURST();
    void thread_srcNet_AWCACHE();
    void thread_srcNet_AWID();
    void thread_srcNet_AWLEN();
    void thread_srcNet_AWLOCK();
    void thread_srcNet_AWPROT();
    void thread_srcNet_AWQOS();
    void thread_srcNet_AWREGION();
    void thread_srcNet_AWSIZE();
    void thread_srcNet_AWUSER();
    void thread_srcNet_AWVALID();
    void thread_srcNet_BREADY();
    void thread_srcNet_RREADY();
    void thread_srcNet_WDATA();
    void thread_srcNet_WID();
    void thread_srcNet_WLAST();
    void thread_srcNet_WSTRB();
    void thread_srcNet_WUSER();
    void thread_srcNet_WVALID();
    void thread_tmp_1_fu_166_p1();
    void thread_tmp_fu_149_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
