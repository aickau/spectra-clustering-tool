#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_p_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_p_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_p_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_p_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_p_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_p_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_p_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_p_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_p_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_p_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_p_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_p_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_p_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_p_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_p_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_p_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_p_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_p_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_p_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_p_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_p_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_p_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_p_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_p_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_p_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_p_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_p_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_p_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_p_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_p_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_p_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_p_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_p_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_p_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_p_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_p_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_p_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_p_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_p_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_p_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_p_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_p_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_p_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_p_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_p_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_srcNet_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_srcNet_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_srcNet_AWADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_srcNet_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_srcNet_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_srcNet_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_srcNet_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_srcNet_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_srcNet_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_srcNet_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_srcNet_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_srcNet_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_srcNet_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_srcNet_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_srcNet_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_srcNet_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_srcNet_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_srcNet_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_srcNet_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_srcNet_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_srcNet_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_srcNet_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_srcNet_ARADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_srcNet_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_srcNet_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_srcNet_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_srcNet_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_srcNet_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_srcNet_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_srcNet_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_srcNet_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_srcNet_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_srcNet_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_srcNet_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_srcNet_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_srcNet_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_srcNet_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_srcNet_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_srcNet_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_srcNet_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_srcNet_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_srcNet_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_srcNet_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_srcNet_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_srcNet_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_dstNet_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_dstNet_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_dstNet_AWADDR", 32, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_dstNet_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_dstNet_AWLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_dstNet_AWSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_dstNet_AWBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_dstNet_AWLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_dstNet_AWCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_dstNet_AWPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_dstNet_AWQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_dstNet_AWREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_dstNet_AWUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_dstNet_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_dstNet_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_dstNet_WDATA", 32, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_dstNet_WSTRB", 4, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_dstNet_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_dstNet_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_dstNet_WUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_dstNet_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_dstNet_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_dstNet_ARADDR", 32, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_dstNet_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_dstNet_ARLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_dstNet_ARSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_dstNet_ARBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_dstNet_ARLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_dstNet_ARCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_dstNet_ARPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_dstNet_ARQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_dstNet_ARREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_dstNet_ARUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_dstNet_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_dstNet_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_dstNet_RDATA", 32, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_dstNet_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_dstNet_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_dstNet_RUSER", 1, hls_in, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_dstNet_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_dstNet_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_dstNet_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_dstNet_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_dstNet_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_dstNet_BUSER", 1, hls_in, 2, "m_axi", "USER", 1),
};
const char* HLS_Design_Meta::dut_name = "AFAProcessFunction";
